{
  "stats": {
    "suites": 4,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-05-20T06:28:41.994Z",
    "end": "2024-05-20T06:28:42.761Z",
    "duration": 767,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6d8f0695-d28c-4083-9d36-8b99591733a9",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8e02d8da-fb83-4a95-b21e-4038d39c4f39",
          "title": "Subscribers API",
          "fullFile": "C:\\Users\\HP\\Desktop\\yt_sub_sushant\\__tests__\\test.js",
          "file": "\\__tests__\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "59114c01-0489-47f7-952a-c30875522842",
              "title": "GET /subscribers",
              "fullFile": "C:\\Users\\HP\\Desktop\\yt_sub_sushant\\__tests__\\test.js",
              "file": "\\__tests__\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get a list of all subscribers",
                  "fullTitle": "Subscribers API GET /subscribers should get a list of all subscribers",
                  "timedOut": false,
                  "duration": 488,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n  .get('/subscribers')\n  .end((err, res) => {\n    if (err) return done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.be.an('array');\n    done();\n  });",
                  "err": {},
                  "uuid": "fd73e053-e1c2-4d9d-8cb0-bb611918f607",
                  "parentUUID": "59114c01-0489-47f7-952a-c30875522842",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fd73e053-e1c2-4d9d-8cb0-bb611918f607"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 488,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "aba798be-e579-41f5-afbc-936f2434b051",
              "title": "GET /subscribers/names",
              "fullFile": "C:\\Users\\HP\\Desktop\\yt_sub_sushant\\__tests__\\test.js",
              "file": "\\__tests__\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get names and subscribed channels for each subscriber",
                  "fullTitle": "Subscribers API GET /subscribers/names should get names and subscribed channels for each subscriber",
                  "timedOut": false,
                  "duration": 95,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n  .get('/subscribers/names')\n  .end((err, res) => {\n    if (err) return done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.be.an('array');\n    // Add more assertions as needed\n    done();\n  });",
                  "err": {},
                  "uuid": "97806dd2-c5de-443c-b593-f2693de8f098",
                  "parentUUID": "aba798be-e579-41f5-afbc-936f2434b051",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "97806dd2-c5de-443c-b593-f2693de8f098"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 95,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e7f8e54e-8fe6-46ba-aa7d-d9afdd982553",
              "title": "GET /subscribers/:id",
              "fullFile": "C:\\Users\\HP\\Desktop\\yt_sub_sushant\\__tests__\\test.js",
              "file": "\\__tests__\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get subscriber information by ID",
                  "fullTitle": "Subscribers API GET /subscribers/:id should get subscriber information by ID",
                  "timedOut": false,
                  "duration": 117,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Fetch a subscriber document from the collection\nconst subscriber = await Subscriber.findOne({});\n// Make sure a subscriber document was found\nif (!subscriber) {\n  throw new Error('No subscriber documents found in the collection.');\n}\n// Get the _id from the fetched subscriber document\nconst subscriberId = subscriber._id.toString();\n// Making the actual request using chai-http\nconst response = await chai.request(app).get(`/subscribers/${subscriberId}`);\n\n// Assertions\nexpect(response).to.have.status(200);\nexpect(response.body).to.have.property('_id', subscriberId);\n// Add more assertions as needed",
                  "err": {},
                  "uuid": "84fe364b-b0e9-4cc7-95f6-b963ef940b70",
                  "parentUUID": "e7f8e54e-8fe6-46ba-aa7d-d9afdd982553",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "84fe364b-b0e9-4cc7-95f6-b963ef940b70"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 117,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}